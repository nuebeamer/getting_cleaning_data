else
{
print(cat("Error in best ",toupper(state),"", tolower(outcome),": invalid state"))
}
}
best("TX","Heart Attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
# best("BB", "heart attack")
# best("NY", "hert attack")
# Best Hospital in State
best <-function(state, outcome){
outcomedata <- as.data.frame(read.csv("d:/nanda/r-programming/assignment3/outcome-of-care-measures.csv", colClasses="character"))
# uniquestate <- as.data.frame(unique(outcomedata$State))
#colnames(uniquestate) <- "State"
print(toupper(state))
print(toupper(outcome))
schkState <- as.data.frame(subset(outcomedata,outcomedata$State==state, drop=TRUE))
if(!is.null(schkState) && !is.na(schkState)){
colnames(schkState) <- colnames(outcomedata)
#print(cat("Rowcount = ",nrow(schkState) ,"; Cols count=", ncol(schkState),";", colnames(schkState)))
if(toupper(outcome) == "HEART ATTACK"){
#print(cat(outcome))
#!sapply(df[2:4],is.na)
schkoutcome <- as.data.frame(subset(schkState, schkState[[11]]==min(schkState[[11]],na.rm=TRUE),drop=TRUE))
#
colnames(schkoutcome) <-  colnames(outcomedata)
schkoutcome <- schkoutcome[order(schkoutcome$Hospital.Name)]
print(schkoutcome[[1,2]])
}
else if(toupper(outcome) == "HEART FAILURE"){
#print(cat(outcome))
#!sapply(df[2:4],is.na)
schkoutcome <- as.data.frame(subset(schkState, schkState[[17]]==min(schkState[[17]],na.rm=TRUE),drop=TRUE))
#
if(!is.na(schkoutcome)){
colnames(schkoutcome) <-  colnames(outcomedata)
schkoutcome <- schkoutcome[order(schkoutcome$Hospital.Name)]
print(schkoutcome[[1,2]])
}
}
#pneumonia
else if(toupper(outcome) == "PNUEMONIA"){
#print(cat(outcome))
#!sapply(df[2:4],is.na)
schkoutcome <- as.data.frame(subset(schkState, schkState[[23]]==min(schkState[[23]],na.rm=TRUE),drop=TRUE))
#schkoutcome <- schkoutcome[order(schkoutcome$Hospital.Name)]
colnames(schkoutcome) <-  colnames(outcomedata)
schkoutcome <- schkoutcome[order(schkoutcome$Hospital.Name)]
print(schkoutcome[[1,2]])
}
else
{
print(cat("Error in best ",toupper(state),"", tolower(outcome),": invalid outcome"))
}
}
else
{
print(cat("Error in best ",toupper(state),"", tolower(outcome),": invalid state"))
}
}
best("TX","Heart Attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
# best("BB", "heart attack")
# best("NY", "hert attack")
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
require("XLConnect")
getxlsd <- loadWorkbook("getdata_data_DATA.gov_NGAP.xlsx")
summary(getxlsd)
dat <- readWorksheet(getxlsd, sheet = "NGAP Sample Data", startRow=18, endRow=23, startCol=7, endCol=15)
sum(dat$Zip*dat$Ext,na.rm=T)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam,"headers=TRUE")))
filesubdata <- subset(filedata, filedata$VAL==23)
print(NROW(filesubdata))
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam,"headers=TRUE"))
filesubdata <- subset(filedata, filedata$VAL==23)
print(NROW(filesubdata))
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam,"headers=TRUE"))
filesubdata <- as.data.frame(subset(filedata, filedata$VAL==23))
print(NROW(filesubdata))
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam))
filesubdata <- as.data.frame(subset(filedata, filedata$VAL==23))
print(NROW(filesubdata))
install.packages(data.table)
install.packages("data.table")
#source.url(url, file = tempfile(), method, ...)
#library(XML)
#library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
fread.csv(destfile, sep = ",", header= TRUE) -> pre
print(head(pre))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
#source.url(url, file = tempfile(), method, ...)
#library(XML)
#library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread.csv(destfile, sep = ",", header= TRUE)
print(head(pre))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread.csv(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
ptm <- proc.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15
print(cat("option1=",proc.time() - ptm))
ptm <- proc.time()
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
print(cat("option2=",proc.time() - ptm))
ptm <- proc.time()
mean(DT$pwgtp15,by=DT$SEX)
print(cat("option3=",proc.time() - ptm))
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(cat("option4=",proc.time() - ptm))
ptm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(cat("option5=",proc.time() - ptm))
ptm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(cat("option6=",proc.time() - ptm))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
ptm <- proc.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15
print(cat("option1=",proc.time() - ptm))
ptm <- proc.time()
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
print(cat("option2=",(proc.time() - ptm)))
ptm <- proc.time()
mean(DT$pwgtp15,by=DT$SEX)
print(cat("option3=",(proc.time() - ptm)))
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(cat("option4=",(proc.time() - ptm)))
ptm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(cat("option5=",(proc.time() - ptm)))
ptm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(cat("option6=",(proc.time() - ptm)))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
ptm <- proc.time()
mean(DT$pwgtp15,by=DT$SEX)
print(cat("option3=",(proc.time() - ptm)))
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(cat("option4=",(proc.time() - ptm)))
ptm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(cat("option5=",(proc.time() - ptm)))
ptm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(cat("option6=",(proc.time() - ptm)))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(cat("option4=",(proc.time() - ptm)))
ptm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(cat("option5=",(proc.time() - ptm)))
ptm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(cat("option6=",(proc.time() - ptm)))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(cat("option4=",(proc.time() - ptm)))
ptm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(cat("option5=",(proc.time() - ptm)))
ptm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(cat("option6=",(proc.time() - ptm)))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
print(cat("option4",system.time(sapply(split(DT$pwgtp15,DT$SEX),mean)))
print(cat("option5",system.time(tapply(DT$pwgtp15,DT$SEX,mean))))
print(cat("option4",system.time(DT[,mean(pwgtp15),by=SEX])))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
print(system.time(sapply(split(DT$pwgtp15,DT$SEX),mean)))
print(system.time(tapply(DT$pwgtp15,DT$SEX,mean)))
print(system.time(DT[,mean(pwgtp15),by=SEX]))
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
print(sys.time)
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(sys.time)
print(sys.time)
tapply(DT$pwgtp15,DT$SEX,mean)
print(sys.time)
print(sys.time)
DT[,mean(pwgtp15),by=SEX]
print(sys.time)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
print(Sys.time())
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(Sys.time())
print(Sys.time())
tapply(DT$pwgtp15,DT$SEX,mean)
print(Sys.time())
print(Sys.time())
DT[,mean(pwgtp15),by=SEX]
print(Sys.time())
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time())
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(proc.time()-ptm)
putm <- proc.time())
tapply(DT$pwgtp15,DT$SEX,mean)
print(proc.time()-ptm)
putm <- proc.time())
DT[,mean(pwgtp15),by=SEX]
print(proc.time()-ptm)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(proc.time()-ptm)
putm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(proc.time()-ptm)
putm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(proc.time()-ptm)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time()
print(system.time(sapply(split(DT$pwgtp15,DT$SEX),mean)))
print(proc.time()-ptm)
putm <- proc.time()
print(system.time(tapply(DT$pwgtp15,DT$SEX,mean)))
print(proc.time()-ptm)
putm <- proc.time()
print(system.time(DT[,mean(pwgtp15),by=SEX]))
print(proc.time()-ptm)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time()
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
print(proc.time()-ptm)
putm <- proc.time()
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
print(proc.time()-ptm)
putm <- proc.time()
system.time(DT[,mean(pwgtp15),by=SEX])
print(proc.time()-ptm)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(proc.time()-ptm)
putm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(proc.time()-ptm)
putm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(proc.time()-ptm)
#source.url(url, file = tempfile(), method, ...)
#library(XML)
library(data.table)
require(data.table)
require(stats)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
destfile <- "getdata_data_ss06pid.csv"
#url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#download.file(url, destfile, method="auto", quiet = FALSE, mode = "w",
#               cacheOK = TRUE,
#               extra = getOption("download.file.extra"))
DT <- fread(destfile, sep = ",", header= TRUE)
#print(head(DT))
#lapply(split(pre, pre$SEX), function(x){rowMeans(x[[,34]])})
putm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
print(proc.time()-ptm)
putm <- proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
print(proc.time()-ptm)
putm <- proc.time()
DT[,mean(pwgtp15),by=SEX]
print(proc.time()-ptm)
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam))
filesubdata <- as.data.frame(subset(filedata, filedata$VAL==23))
print(NROW(filesubdata))
setwd("D:\\Nanda\\R-programming\\Quiz1-Getting_CleaningData\\")
#require("XLConnect")
filenam <- "getdata_data_ss06hid.csv"
filedata <- as.data.frame(read.csv(filenam))
filesubdata <- as.data.frame(subset(filedata, filedata$VAL==24))
print(NROW(filesubdata))
